library(RMySQL)
library(dbConnect)
library(RCurl)
# connect to SQL databse
con <- dbConnect(
MySQL(),
dbname   = '',
user     = 'root',
password = 'yw8570lucky'
)
# Create a database to store data
dbname  <- "ChEBI"
create  <- paste0("CREATE DATABASE ", dbname,";")
dbSendQuery(con, create)
dbSendQuery(con, paste0("use ", dbname, ";"))
# get dump file
temp_dir     <- tempfile()                                 # create temp file and dir to load data
temp_file    <- tempfile()
url_create   <- "ftp://ftp.ebi.ac.uk/pub/databases/chebi/generic_dumps/mysql_create_tables.sql"
download_sql <- "~/Downloads/mysql_create_tables.sql"
download.file(url_create, download_sql)
dbSendQuery(con, paste0("source ", download_sql,";"))
dbSendStatement(con, paste0("source ", download_sql,";"))
create_table <- readLines(file())
create_table <- readLines(download_sql
create_table <- readLines(download_sql)
create_table <- readLines(download_sql)
dbSendQuery(con, create_table)
download.file(url_create, temp_file)
create_table <- readLines(temp_sql)
create_table <- readLines(temp_file)
dbSendQuery(con, create_table)
# connect to SQL databse
con <- dbConnect(
MySQL(),
dbname   = '',
user     = 'root',
password = 'yw8570lucky'
)
# Create a database to store data
dbname  <- "ChEBI"
create  <- paste0("CREATE DATABASE ", dbname,";")
dbSendQuery(con, create)
dbSendQuery(con, paste0("use ", dbname, ";"))
# get dump file
temp_dir     <- tempfile()                                 # create temp file and dir to load data
temp_file    <- tempfile()
url_create   <- "ftp://ftp.ebi.ac.uk/pub/databases/chebi/generic_dumps/mysql_create_tables.sql"
download.file(url_create, temp_file)
create_table <- readLines(temp_file)
dbSendQuery(con, create_table)
dbSendQuery(con, "SHOW TABLS")
dbSendQuery(con, "SHOW TABLES")
dbSendStatement(con, create_table)
create_table <- readLines(temp_file)
dbSendStatement(con, create_table)
create_table
dbSendStatement(con, "SET FOREIGN_KEY_CHECKS = 0;")
dbSendQuery(con, "SET FOREIGN_KEY_CHECKS = 0;")
# connect to SQL databse
con <- dbConnect(
MySQL(),
dbname   = '',
user     = 'root',
password = 'yw8570lucky'
)
dbSendQuery(con, paste0("use ", dbname, ";"))
create_table <- readLines(temp_file)
dbSendStatement(con, create_table)
dbSendQuery(con, "SHOW TABLES")
for (file in files) {                                   # import data into tables
get_data <- readLines(file())
dbSendQuery(con, get_data)
}
url_data   <- "ftp://ftp.ebi.ac.uk/pub/databases/chebi/generic_dumps/generic_dump_allstar.zip"
download.file(url_data, temp_file)
unzip(temp_file, exdir = temp_dir)                      # unzip temp file in temp dir
files      <- paste0(temp_dir,"/",list.files(temp_dir))  # take each file in temp dir
for (file in files) {                                   # import data into tables
get_data <- readLines(file())
dbSendQuery(con, get_data)
}
unlink(c(temp_file,zip_dir))
dbSendQuery(con, "SHOW TABLES")
dbClearResult(con)
# install and load packages
required_packages=c("RMySQL","dbConnect");
Install_And_Load <- function(required_packages){
remaining_packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])];
if(length(remaining_packages)){
install.packages(remaining_packages);
}
for(package in required_packages){
library(package, character.only = TRUE,quietly = TRUE);
}
}
Install_And_Load(required_packages);
# connect to SQL
con <- dbConnect(
MySQL(),
dbname   = '',
user     = 'root',
password = 'yw8570lucky'                               #......This is my password....
)
# create a database to store data
dbname  <- "ChEBI"
dbSendQuery(con, paste0("use ", dbname, ";"))
date    <- format(Sys.time(), "%b_%d_%Y_")
outfile <- paste0("~/Desktop/", "MySQL", date, "Brand.txt")     # outfile name
# get brand names
query     <- ""
#------
# Workflow and Argument
#------
# Step 1: build local MySQL database
#         (a) create a local MySQL database
#             Line 52 to change database name
#         (b) download dump files from ChEBI (They actually provide .sql files)
#             Line 87 and 93 to change dump files url
#         (c) import data from dump diles to new database
# Step 2: get query data
drug_list <- readLines("~/Desktop/druglist.txt")          # take drug list
for (i in 1:length(drug_list)) {
# MySQL Qeury
query   <- paste0(
query,
"SELECT names.name AS brand_name, compounds.chebi_accession, compounds.name AS drug_compounds_name",
" FROM names",
" JOIN compounds",
" ON compounds.id = names.compound_id",
" WHERE names.type = 'BRAND NAME' AND compounds.name = '", drug_list[i], "'"
)
if(i != length(drug_list)){
query   <- paste0(query, " union ")
}else{
query   <- paste0(query, ";")
}
}
result  <- dbGetQuery(con, query)                     # Retrive result
write.table(result, file = outfile, row.names=FALSE)
dbDisconnect(con)
outfile
drug.list <- readLines("～/Desktop/MGH/drug.list.txt")
drug.bank <- read.csv("～/Desktop/MGH/drug links.csv")
date <- format(Sys.time(), "%b_%d_%Y_")
outfile <- paste("~/Desktop/", "Scrap_" , date , "_Brand.txt")
for (drug in drug.list) {
# is drug exits in brugbank
if (drug %in% drug.bank$Name){
# get drug.com url
url <- as.character(drug.bank[drug.bank$Name == drug,"Drugs.com.Link"])
# get brand names
brand_name <- (read_html(url) %>%
html_nodes("p.drug-subtitle") %>%
html_text() %>%
strsplit("Brand Name: ")
)[[1]][-1] %>%
gsub(pattern = ",", replacement = "\t")
# write output
out <- paste(drug,brand_name,sep = "\t")
write(out, file = outfile, append = T)
}else{
# print message about missing drugs
print(paste("Can't find DrugBank ID for", drug, sep = " "))
out <- paste(drug,"",sep = "\t")
write(out, file = outfile, append = T)
}
}
drug.list <- readLines("～/Desktop/druglist.txt")
drug.list <- readLines("/Users/zhaozhili/Desktop/druglist.txt")
drug.bank <- read.csv("～/Desktop/MGH/drug links.csv")
date <- format(Sys.time(), "%b_%d_%Y_")
outfile <- paste("~/Desktop/", "Scrap_" , date , "_Brand.txt")
for (drug in drug.list) {
# is drug exits in brugbank
if (drug %in% drug.bank$Name){
# get drug.com url
url <- as.character(drug.bank[drug.bank$Name == drug,"Drugs.com.Link"])
# get brand names
brand_name <- (read_html(url) %>%
html_nodes("p.drug-subtitle") %>%
html_text() %>%
strsplit("Brand Name: ")
)[[1]][-1] %>%
gsub(pattern = ",", replacement = "\t")
# write output
out <- paste(drug,brand_name,sep = "\t")
write(out, file = outfile, append = T)
}else{
# print message about missing drugs
print(paste("Can't find DrugBank ID for", drug, sep = " "))
out <- paste(drug,"",sep = "\t")
write(out, file = outfile, append = T)
}
}
#---
# File   : brand_by_scrapping.R
# History: 25-Jan-2019 Zhaozhi created the file
#---
# This file take the <drug list> and get the brand name from <DrugBank>
# Input  : drug.list.txt
# Output : ~/Desktop/Scrap_date.brand.txt
#---
drug.list <- readLines("/Users/zhaozhili/Desktop/druglist.txt")
drug.bank <- read.csv("/Users/zhaozhili/Desktop/MGH/druglinks.csv ")
date <- format(Sys.time(), "%b_%d_%Y_")
outfile <- paste("~/Desktop/", "Scrap_" , date , "_Brand.txt")
for (drug in drug.list) {
# is drug exits in brugbank
if (drug %in% drug.bank$Name){
# get drug.com url
url <- as.character(drug.bank[drug.bank$Name == drug,"Drugs.com.Link"])
# get brand names
brand_name <- (read_html(url) %>%
html_nodes("p.drug-subtitle") %>%
html_text() %>%
strsplit("Brand Name: ")
)[[1]][-1] %>%
gsub(pattern = ",", replacement = "\t")
# write output
out <- paste(drug,brand_name,sep = "\t")
write(out, file = outfile, append = T)
}else{
# print message about missing drugs
print(paste("Can't find DrugBank ID for", drug, sep = " "))
out <- paste(drug,"",sep = "\t")
write(out, file = outfile, append = T)
}
}
#---
# File   : brand_by_scrapping.R
# History: 25-Jan-2019 Zhaozhi created the file
#---
# This file take the <drug list> and get the brand name from <DrugBank>
# Input  : drug.list.txt
# Output : ~/Desktop/Scrap_date.brand.txt
#---
drug.list <- readLines("/Users/zhaozhili/Desktop/druglist.txt")
drug.bank <- read.csv("/Users/zhaozhili/Desktop/MGH/druglinks.csv")
date <- format(Sys.time(), "%b_%d_%Y_")
outfile <- paste("~/Desktop/", "Scrap_" , date , "_Brand.txt")
for (drug in drug.list) {
# is drug exits in brugbank
if (drug %in% drug.bank$Name){
# get drug.com url
url <- as.character(drug.bank[drug.bank$Name == drug,"Drugs.com.Link"])
# get brand names
brand_name <- (read_html(url) %>%
html_nodes("p.drug-subtitle") %>%
html_text() %>%
strsplit("Brand Name: ")
)[[1]][-1] %>%
gsub(pattern = ",", replacement = "\t")
# write output
out <- paste(drug,brand_name,sep = "\t")
write(out, file = outfile, append = T)
}else{
# print message about missing drugs
print(paste("Can't find DrugBank ID for", drug, sep = " "))
out <- paste(drug,"",sep = "\t")
write(out, file = outfile, append = T)
}
}
#---
# File   : brand_by_scrapping.R
# History: 25-Jan-2019 Zhaozhi created the file
#---
# This file take the <drug list> and get the brand name from <DrugBank>
# Input  : drug.list.txt
# Output : ~/Desktop/Scrap_date.brand.txt
#---
required_packages=c("tidyverse","rvest");
Install_And_Load <- function(required_packages){
remaining_packages <- required_packages[!(required_packages %in% installed.packages()[,"Package"])];
if(length(remaining_packages)){
install.packages(remaining_packages);
}
for(package in required_packages){
library(package, character.only = TRUE,quietly = TRUE);
}
}
Install_And_Load(required_packages);
drug.list <- readLines("/Users/zhaozhili/Desktop/druglist.txt")
drug.bank <- read.csv("/Users/zhaozhili/Desktop/MGH/druglinks.csv")
date <- format(Sys.time(), "%b_%d_%Y_")
outfile <- paste("~/Desktop/", "Scrap_" , date , "_Brand.txt")
for (drug in drug.list) {
# is drug exits in brugbank
if (drug %in% drug.bank$Name){
# get drug.com url
url <- as.character(drug.bank[drug.bank$Name == drug,"Drugs.com.Link"])
# get brand names
brand_name <- (read_html(url) %>%
html_nodes("p.drug-subtitle") %>%
html_text() %>%
strsplit("Brand Name: ")
)[[1]][-1] %>%
gsub(pattern = ",", replacement = "\t")
# write output
out <- paste(drug,brand_name,sep = "\t")
write(out, file = outfile, append = T)
}else{
# print message about missing drugs
print(paste("Can't find DrugBank ID for", drug, sep = " "))
out <- paste(drug,"",sep = "\t")
write(out, file = outfile, append = T)
}
}
